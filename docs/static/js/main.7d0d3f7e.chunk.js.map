{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","search","setSearch","onSubmit","e","preventDefault","trim","length","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifItem","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","GifGrid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA4BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAUA,OACI,8BACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAOK,OAAOC,OAAS,IACvBR,GAAc,iBAAM,CAACE,MACrBC,EAAU,MAMV,SACI,uBACIM,KAAK,OACLC,YAAY,eACZC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAUE,EAAEQ,OAAOF,e,8BCrB3CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARlB,kBAWZM,GAXY,4CAAH,sDCcLO,G,KAXK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,qBAAKc,UAAU,YAAf,SACE,sBAAKA,UAAU,GAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BJ,IAC5B,qBAAKI,UAAU,WAAWC,IAAKf,EAAKgB,IAAKN,WCclCO,EAhBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACjB,ECJ0B,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACNxB,EAAUC,GACLwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IACEqB,EDViBK,CAAc1B,GAAhCoB,EAAR,EAAQA,QAASb,EAAjB,EAAiBA,KAEjB,OACE,qCACGa,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,6BAAKhB,IACL,qBAAKgB,UAAU,YAAf,SACGT,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOjBgB,EAlBM,WAEnB,MAAoCzC,mBAAS,IAA7C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACE,gCACE,oBAAI+B,UAAU,QAAd,4BACA,cAAC,EAAD,CAAc/B,cAAgBA,IAC9B,uBACC2C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACd,6BACE,cAACC,EAAD,CAAS9B,SAAWA,KADX6B,U,MCTnBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7d0d3f7e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (search.trim().length > 2) {\r\n            setCategories(() => [search]);\r\n            setSearch('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add Category\"\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=u3dZDxk1R0HN3dMxRRXF0L4pkFPRggTh`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map((gif) => {\r\n      return {\r\n        id: gif.id,\r\n        title: gif.title,\r\n        url: gif.images.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };","import React from \"react\";\r\nimport './style.css'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"main-card\">\r\n      <div className=\"\">\r\n        <h3 className=\"card-title\">{title}</h3>\r\n        <img className=\"card-img\" src={url} alt={title} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from '../components/GifGridItem';\r\n\r\nimport \"./style.css\";\r\n\r\nconst GifItem = ({ category }) => {\r\n  const { loading, data } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n      <h2>{category}</h2>\r\n      <div className=\"container\">\r\n        {data.map((gif) => (\r\n          <GifGridItem key={gif.id} {...gif} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifItem;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(  category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [ category ]);\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">Gif Expert App</h1>\r\n      <AddCategory  setCategories={ setCategories } />\r\n      <hr />\r\n      {categories.map((category, i) => (\r\n        <ul  key={ i }>\r\n          <GifGrid category={ category } />\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}